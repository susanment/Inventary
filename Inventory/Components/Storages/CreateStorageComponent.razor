@using Entities
@using Business

<EditForm Model="oStorage">
    <div class="form-group">
        <label>Bodega</label>
        <InputSelect @bind-Value="oStorage.WarehouseId" class="form-control">
            <option value=""> seleccione bodega...</option>
            @foreach (var item in warehouses)
            {
                <option value="@item.WarehouseId"> @item.WarehouseName</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label>Producto</label>
        <InputSelect @bind-Value="oStorage.ProductId" class="form-control">
            <option value=""> seleccione un producto...</option>
            @foreach (var producto in products)
            {
                <option value="@producto.ProductId"> @producto.ProductName</option>
            }
        </InputSelect>
    </div>
    <input type="button" value="Almacenar producto" @onclick="SaveStorage"/>
    
    @message
</EditForm>

@code {
    StorageEntity oStorage = new StorageEntity();
    List<WarehouseEntity> warehouses = new List<WarehouseEntity>();
    List<ProductEntity> products = new List<ProductEntity>();
    string message;
    protected override async Task OnInitializedAsync()
    {
        warehouses = B_Warehouse.WherehouseList();
        products = B_Product.ProductList();

    }

    private void SaveStorage()
    {


        oStorage.StorageId = $"{oStorage.WarehouseId}-{oStorage.ProductId}";
        if (!B_Storage.IsProductInWarehouse(oStorage.StorageId))
        {
            oStorage.LastUpdate = DateTime.Now;
            B_Storage.CreateStorage(oStorage);
            message = "producto registrado";
        }
        else
        {
            message = "El producto ya existe";
        }
    }
}
